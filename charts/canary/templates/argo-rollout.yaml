apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: {{ .Values.application }}
spec:
  replicas: 3
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      mydomain.com/app: {{ .Values.application }}
  template:
    metadata:
      labels:
        mydomain.com/app: {{ .Values.application }}
        mydomain.com/version: "{{ .Values.version }}"
        sidecar.istio.io/inject: "true"
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
    spec:
      containers:
        - image: "{{ .Values.image_repository }}:{{ .Values.version }}"
          name: {{ .Values.application }}
          ports:
            - containerPort: {{ .Values.port }}
              protocol: TCP
  strategy:
    canary:
      stableMetadata:
        labels:
          argo-rollouts/version: stable
      canaryMetadata:
        labels:
          argo-rollouts/version: canary
      steps:
        - setHeaderRoute:
            name: header-version
            match:
              - headerName: x-version
                headerValue:
                  exact: "{{ .Values.version }}"
        - setWeight: 10
        - pause:
            duration: 20s
        - setWeight: 20
        - pause:
            duration: 20s
        - setWeight: 30
        - pause:
            duration: 20s
        - setWeight: 40
        - pause:
            duration: 20s
        - setWeight: 80
        - pause:
            duration: 20s
        - setWeight: 100
        - pause:
            duration: 10s
      trafficRouting:
        managedRoutes:
          - name: header-version
        istio:
          virtualService:
            name: {{ .Values.application }}
            routes:
              - primary
          destinationRule:
            name: {{ .Values.application }}
            stableSubsetName: stable
            canarySubsetName: canary
